/* void    free_generator(double **genome, double **output, int bestGen) */
/* { */
/*   int   i; */

/*   i = -1; */
/*   while (++i < 10) */
/*     { */
/*       if (bestGen != i) */
/*         free(genome[i]); */
/*       free(output[i]); */
/*     } */
/* } */

/* double          *generator(double *ipt, int iptSize, */
/*                            double *opt, int optSize, double acc) */
/* { */
/*   double        *genome[10]; */
/*   double        *output[10]; */
/*   int           bestGen; */
/*   int           *pctNb; */
/*   int           i; */

/*   if (!(pctNb = create_pct_tab(iptSize, optSize, 3))) */
/*     return (NULL); */
/*   bestGen = -1; */
/*   while (bestGen == -1 || !acceptation(output[bestGen], opt, optSize, acc)) \
*/
/*     { */
/*       if (bestGen != -1) */
/*         free_generator(genome, output, -1); */
/*       i = -1; */
/*       while (++i < 10) */
/*         if (!(genome[i] = generate_genome(3, pctNb))) */
/*           return (NULL); */
/*       while (--i >= 0) */
/*         if (!(output[i] = neural_network(genome[i], ipt))) */
/*           return (NULL); */
/*       bestGen = best_doubtab(output, opt, optSize); */
/*     } */
/*   free_generator(genome, output, bestGen); */
/*   free(pctNb); */
/*   return (genome[bestGen]); */
/* } */
